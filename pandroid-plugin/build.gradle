apply plugin: 'groovy'
apply plugin: 'java'
apply from: file('../delivery.gradle')

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation project(':pandroid-java')
    implementation project(':pandroid-annotations')
    implementation 'com.squareup:javapoet:1.11.1'

    testImplementation 'junit:junit:4.12'
    compileOnly "com.android.tools.build:gradle:3.5.1"
    testImplementation "com.android.tools.build:gradle:3.5.1"
}

task(copyLocalProperties, type: Copy) {
    from('../local.properties')
    into('src/test/resources/android-app')
}

def filesToCopy = ['../version.properties',
                   '../pandroid-library/pandroid.gradle',
                   '../pandroid-library/dagger.gradle',
                   '../pandroid-library/pandroid.properties',
                   '../pandroid-library/pandroid-proguard-rules.pro']

task(copyPandroidFilesToTest, type: Copy) {
    from(filesToCopy)
    into('src/test/resources/android-app/build/pandroid')
}


classes.finalizedBy copyPandroidFilesToTest
classes.finalizedBy copyLocalProperties


jar {
    from(filesToCopy)
}


//
//
//task pandroidInstall(dependsOn: [':pandroid-library', ':pandroid-compiler', ':pandroid-annotations', ':pandroid-java'].collect {
//    project(it)
//}.collect { it.getTasksByName('install', false) });
//install.dependsOn pandroidInstall
//
//
//task pandroidUploadArchives(dependsOn: [':pandroid-library', ':pandroid-compiler', ':pandroid-annotations', ':pandroid-java'].collect {
//    project(it)
//}.collect { it.getTasksByName('uploadArtifacts', false) });
//uploadArtifacts.dependsOn pandroidUploadArchives
//



