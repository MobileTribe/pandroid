buildscript {
    ext.kotlin_version = '1.2.31'
    apply from: file('support.gradle')
    repositories {
        jcenter()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'
        classpath 'com.leroymerlin.plugins:delivery-plugin:3.0.2'
        classpath 'com.leroymerlin.plugins:android-templates-plugin:1.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://clojars.org/repo/" }
        google()
    }
}

//SONAR
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}


apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.junit.reportsPath", "build/test-results/debug"
    }
}

apply plugin: "com.leroymerlin.delivery"


task('createDoc', dependsOn: project(':pandroid-doc').getTasksByName('asciidoctor', false))

delivery {
    linkedSubModules 'pandroid-plugin', 'pandroid-library', 'pandroid-java', 'pandroid-compiler', 'pandroid-annotations', 'pandroid-kotlin'
    enableReleaseGitFlow = true

    flows {
        documentation {
            task 'createDoc'
            add 'pandroid-doc/html/.'
        }

    }
}

tasks.findByPath('releaseGitStepGenerateVersionFiles').dependsOn += documentationFlow


task install(dependsOn: [':pandroid-plugin', ':pandroid-library', ':pandroid-compiler', ':pandroid-annotations', ':pandroid-java', ':pandroid-kotlin'].collect {
    project(it)
}.collect { it.getTasksByName('install', false) });
